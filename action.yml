name: 'download-install'
description: 'Downloads and installs remote files to the local machine'
inputs:
  checksum:
    description: 'Checksum to validate the downloaded file against. Either this or checksum-url is required.'
    required: false
    default: ''

  checksum-url:
    description: 'URL to the checksum file to validate. Either this or checksum is required.'
    required: false

  checksum-entry:
    description: 'Used to determine the entry in the checksum file. Required when checksum-url is present.'
    required: false

  skip-checksum:
    description: 'Skips checksum evaluation'
    required: false

  download-url:
    description: 'URL to download the contents from.'
    required: false

  archive-url:
    description: 'Deprecated - use download-url - URL to download the contents from.'
    required: false

  sha-algorithm:
    description: 'Algorithm used to compare the downloaded content to the provided checksum. Defaults to `"sha256sum"`.'
    required: false
    default: 'sha256sum'

  download-entries:
    description: 'Entries in the content to extract'
    required: false

  archive-entries:
    description: 'Deprecated - use download-entries - Entries in the content to extract'
    required: false

  target-path:
    description: 'Where to extract and install the files. Defaults to `"/usr/local/bin"`.'
    required: false
    default: '/usr/local/bin'

  modifier:
    description: 'Modifier to apply to the extracted files. Defaults to `"+x"`.'
    required: false
    default: '+x'

runs:
  using: 'composite'
  steps:
    - id: 'get-checksum'
      if: ${{ inputs.checksum == '' && inputs.skip-checksum != true }}
      run: 'echo checksum=$($GITHUB_ACTION_PATH/get-checksum.sh) >> $GITHUB_OUTPUT'
      shell: 'sh'
      env:
        CHECKSUM_URL: ${{ inputs.checksum-url }}
        CHECKSUM_ENTRY: ${{ inputs.checksum-entry }}

    - id: 'download-content'
      run: 'echo download-file=$($GITHUB_ACTION_PATH/download-content.sh) >> $GITHUB_OUTPUT'
      shell: 'sh'
      env:
        DOWNLOAD_URL: ${{ inputs.download-url || inputs.archive-url }}
        SKIP_CHECKSUM: ${{ inputs.skip-checksum }}
        CHECKSUM: ${{ inputs.checksum == '' && steps.get-checksum.outputs.checksum || inputs.checksum }}
        SHA_ALGORITHM: ${{ inputs.sha-algorithm }}

    - id: 'extract-content'
      run: 'echo extracted-entries=$($GITHUB_ACTION_PATH/extract-content.sh) >> $GITHUB_OUTPUT'
      shell: 'sh'
      env:
        DOWNLOAD_FILE: ${{ steps.download-content.outputs.download-file }}
        DOWNLOAD_ENTRIES: ${{ inputs.download-entries || inputs.archive-entries }}
        TARGET_PATH: ${{ inputs.target-path }}
        MODIFIER: ${{ inputs.modifier }}

    - if: always()
      id: 'cleanup'
      run: 'rm -rf $(dirname ${{ steps.download-content.outputs.download-file }}) || exit 0'
      shell: 'sh'

branding:
  icon: 'download'
  color: 'purple'
